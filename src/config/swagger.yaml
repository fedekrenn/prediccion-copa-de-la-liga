openapi: 3.0.3
info:
  title: PredicciÃ³n Copa de la Liga API
  description: API for football league predictions and user authentication
  version: 2.0.0
  contact:
    name: Federico Krenn
    email: fedekrenn@gmail.com
  license:
    name: GPL v3
    url: https://opensource.org/licenses/GPL-3.0

servers:
  - url: https://prediccion-copa.vercel.app/api
    description: Production server

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token for authentication

  schemas:
    User:
      type: object
      properties:
        email:
          type: string
          format: email
          example: "user@example.com"
        password:
          type: string
          minLength: 6
          example: "password123"
      required:
        - email
        - password

    Token:
      type: object
      properties:
        token:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        expiration_date:
          type: string
          format: date-time
          example: "2026-09-16T12:00:00.000Z"
        status:
          type: string
          description: "existing_valid_token | token_renewed | new_token_created"
          example: "new_token_created"

    RegisterResponse:
      type: object
      properties:
        id:
          type: string
          example: "user123"
        email:
          type: string
          format: email
          example: "user@example.com"
        token:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        expiration_date:
          type: string
          format: date-time
          example: "2026-09-16T12:00:00.000Z"

    TeamBaseInfo:
      type: object
      properties:
        name:
          type: string
          example: "River Plate"
        img:
          type: string
          example: "river-plate.png"

    TeamSeasonStats:
      type: object
      properties:
        totalPoints:
          type: integer
          example: 45
        playedMatches:
          type: integer
          example: 20
        goalsDifference:
          type: integer
          example: 15
        gamesWon:
          type: integer
          example: 14
        gamesEven:
          type: integer
          example: 3
        gamesLost:
          type: integer
          example: 3
        liveData:
          type: object
          properties:
            status:
              type: integer
              example: 1
            score:
              type: array
              items:
                type: integer
              example: [2, 1]

    TeamPredictionCalculations:
      type: object
      properties:
        estimatedTotalPoints:
          type: number
          example: 68.5
        effectivityPercentage:
          type: number
          example: 75.2
        estimatedAverage:
          type: number
          example: 2.1

    TeamPredictions:
      allOf:
        - $ref: "#/components/schemas/TeamPredictionCalculations"
        - type: object
          properties:
            position:
              type: integer
              example: 3
            classification:
              type: string
              enum:
                [
                  "libertadores",
                  "sudamericana",
                  "descensoPorTabla",
                  "descensoPromedios",
                  "noClasificado",
                ]
              example: "libertadores"

    TeamTablePrediction:
      type: object
      properties:
        position:
          type: integer
          example: 3
        classification:
          type: string
          enum:
            [
              "libertadores",
              "sudamericana",
              "descensoPorTabla",
              "descensoPromedios",
              "noClasificado",
            ]
          example: "libertadores"

    CompleteTeamData:
      type: object
      properties:
        teamInfo:
          $ref: "#/components/schemas/TeamBaseInfo"
        currentData:
          $ref: "#/components/schemas/TeamSeasonStats"
        predictions:
          $ref: "#/components/schemas/TeamPredictions"

    Error:
      type: object
      properties:
        error:
          type: string
          example: "Error message"

    UserCreated:
      type: object
      properties:
        id:
          type: string
          example: "user123"
        email:
          type: string
          format: email
          example: "user@example.com"

paths:
  /register:
    post:
      tags:
        - Authentication
      summary: Register a new user
      description: Creates a new user account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "201":
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegisterResponse"
        "400":
          description: Bad request - User already exists or invalid data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /get-token:
    post:
      tags:
        - Authentication
      summary: Get existing token
      description: >-
        Retrieves an existing API token for a user. If a valid token already
        exists it will be returned; otherwise a new token will be created
        (or renewed).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: Token retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Token"
              examples:
                tokenExample:
                  summary: Example token response
                  value:
                    token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    expiration_date: "2026-09-16T12:00:00.000Z"
                    status: "new_token_created"
        "400":
          description: Bad request - Missing email or password
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized - Invalid credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: User or token not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /revoke-token:
    post:
      tags:
        - Authentication
      summary: Revoke token
      description: Revokes a JWT token for a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: Token revoked successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                    example: "Token was deleted"
        "400":
          description: Bad request - Missing email or password
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized - Invalid credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: User or token not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /prediction:
    get:
      tags:
        - Predictions
      summary: Get league predictions
      description: |
        Get football league predictions. Can return:
        - Full prediction table (no parameters)
        - Prediction by team position (position parameter)
        - Prediction by team name (name parameter)
        - Teams in specific classification (classification parameter)
      security:
        - BearerAuth: []
      parameters:
        - name: position
          in: query
          description: Get prediction for team at specific position
          required: false
          schema:
            type: integer
            minimum: 1
            example: 1
        - name: name
          in: query
          description: Get prediction for specific team by name
          required: false
          schema:
            type: string
            example: "River Plate"
        - name: classification
          in: query
          description: Get teams in specific classification
          required: false
          schema:
            type: string
            enum:
              [
                "libertadores",
                "sudamericana",
                "descensoPorTabla",
                "descensoPromedios",
                "noClasificado",
              ]
            example: "libertadores"
      responses:
        "200":
          description: Prediction data retrieved successfully
          content:
            application/json:
              schema:
                oneOf:
                  - type: array
                    items:
                      $ref: "#/components/schemas/CompleteTeamData"
                    description: Full prediction table or teams in classification
                  - $ref: "#/components/schemas/CompleteTeamData"
                    description: Single team prediction
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized - Token required for queries with parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

tags:
  - name: Authentication
    description: >-
      User authentication and token management. Tokens issued by `/get-token` are
      API tokens with an expiration time.
  - name: Predictions
    description: Football league predictions and statistics
